{"version":3,"sources":["components/About.jsx","components/Projects.jsx","components/Welcome.jsx","components/Experience.jsx","Site.js","serviceWorker.js","index.js"],"names":["makeIcon","img","alt","url","height","className","href","src","AboutSlide","props","python","kotlin","id","style","color","role","aria-label","tag_colours","WelcomeSlide","$","hasClass","this","hideNav","removeClass","click","github","linkedin","textAlign","offset","Component","ProjectCard","state","project","Card","border","Body","Title","head","Text","marginLeft","padding","whiteSpace","fontStyle","date","parsedDate","Date","toLocaleString","month","getFullYear","parseDate","sub","desc","skills","map","tag","txt","borderColor","key","tags","margin","Link","width","CustomCarousel","projects","max_cards","current","changeSlide","bind","i","setState","slides","arr","size","res","count","length","push","slice","split","onClick","aria-hidden","Slide","nextProps","contents","ProjectSlide","dim","Math","round","window","innerHeight","innerWidth","maxCards","updateDimensions","addEventListener","maxWidth","overflow","ExperienceBody","entity","location","description","logo","lastCard","buttonActive","expand","active","body","replace","Tab","Pane","eventKey","type","data-toggle","data-target","aria-expanded","aria-controls","viewBox","fill","xmlns","fillRule","d","par","ExperienceSlide","experience","sp","reduce","acc","item","ListGroup","Item","action","borderBottom","duration","Container","defaultActiveKey","Col","sm","Content","App","hideNavIfShown","toggleNav","addClass","about","scrollTop","top","blur","scroll","Helmet","bodyAttributes","Navbar","variant","fixed","backgroundColor","navItem","marginTop","Toggle","Collapse","Nav","marginRight","opacity","Experience","Projects","Tags","paddingBottom","marginBottom","position","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.046b7b8b.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function makeIcon(img, alt, url, height = 25, className = \"\") {\n  return (\n    <a className={className} href={url}>\n      <img src={img} alt={alt} height={height + \"px\"} />\n    </a>\n  );\n}\n\nexport default function AboutSlide(props) {\n  const python = makeIcon(\"python.png\", \"Python\", \"https://www.python.org\");\n  const kotlin = makeIcon(\"kotlin.png\", \"Kotlin\", \"https://kotlinlang.org\");\n\n  return (\n    <section id=\"about\" className=\"about slide\">\n      <div className=\"about-inner\">\n        <div className=\"slide-title\" style={{ color: \"white\" }}>\n          About\n        </div>\n        <div className=\"about-container\">\n          <div className=\"about-card\">\n            <div className=\"about-content\" style={{ color: \"white\" }}>\n              <p>\n                Hi{\" \"}\n                <span role=\"img\" aria-label=\"hand wave\">\n                  👋\n                </span>\n                , I’m a final year Computer Science student at the University of\n                Warwick.\n              </p>\n              <p>\n                I love building things which help people and ensuring they’re\n                secure{\" \"}\n                <span role=\"img\" aria-label=\"secure\">\n                  🔒\n                </span>\n                . You’ll normally find me playing with Python {python} or Kotlin{\" \"}\n                {kotlin}.\n              </p>\n              <p>\n                Aside from coding, I'm an extremely competitive table-tennis{\" \"}\n                <span role=\"img\" aria-label=\"table tennis\">\n                  🏓\n                </span>{\" \"}\n                and badminton{\" \"}\n                <span role=\"img\" aria-label=\"badminton\">\n                  🏸\n                </span>{\" \"}\n                player, however, for more relaxing entertainment I often play\n                the piano{\" \"}\n                <span role=\"img\" aria-label=\"piano\">\n                  🎹\n                </span>\n                .\n              </p>\n              <p>\n                I’m always open to new opportunities so please reach out{\" \"}\n                <span role=\"img\" aria-label=\"grin\">\n                  😁\n                </span>\n                .\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nvar tag_colours;\nconst max_cards = 8;\n\nfunction parseDate(date) {\n  const parsedDate = new Date(date);\n  const month = parsedDate.toLocaleString(\"default\", { month: \"long\" });\n  const year = parsedDate.getFullYear();\n  return month + \" \" + year;\n}\n\nfunction tags(project) {\n  return project.skills.map((tag) => {\n    const color = tag_colours[tag] ? tag_colours[tag] : \"grey\";\n    const txt = (\n      <p className=\"tag\" style={{ color: color, borderColor: color }}>\n        {tag}\n      </p>\n    );\n    return <div key={project.head + tag}> {txt} </div>;\n  });\n}\n\nfunction ProjectCard(state) {\n  const project = state.project;\n  return (\n    <Card className=\"text-black project-card\" style={{ border: \"none\" }}>\n      <Card.Body>\n        <div className=\"d-flex justify-content-between\">\n          <Card.Title>{project.head}</Card.Title>\n          <Card.Text\n            style={{\n              color: \"#6b6b6b\",\n              marginLeft: 5,\n              padding: 0,\n              textAlign: \"right\",\n              whiteSpace: \"nowrap\",\n              fontStyle: \"italic\",\n            }}\n          >\n            {parseDate(project.date)}\n          </Card.Text>\n        </div>\n        <Card.Text style={{ color: \"#6b6b6b\" }}>{project.sub}</Card.Text>\n        <Card.Text className=\"card-content\">{project.desc}</Card.Text>\n        <div className=\"tag-container\" style={{ padding: 0 }}>\n          <div className=\"d-flex\" style={{ padding: \"1.25rem\" }}>\n            {tags(project)}\n            {project.github ? (\n              <div className=\"ml-auto \" style={{ margin: 0 }}>\n                <Card.Link href={project.github} style={{ padding: \"1px 0px\" }}>\n                  <img\n                    width=\"30px\"\n                    src=\"GitHub-Mark-64px.png\"\n                    alt=\"GitHub Logo\"\n                  />\n                </Card.Link>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n\nfunction split(arr, size) {\n  var res = [];\n  var count = 0;\n  while (count < arr.length) {\n    res.push(arr.slice(count, size + count));\n    count += size;\n  }\n  return res;\n}\n\nclass CustomCarousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: props.project,\n      max_cards: props.max_cards,\n      current: 0,\n    };\n    this.changeSlide = this.changeSlide.bind(this);\n  }\n\n  changeSlide(i) {\n    this.setState({ current: this.state.current + i });\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    return {\n      projects: state.projects,\n      max_cards: nextProps.max_cards,\n      current: nextProps.current == null ? state.current : nextProps.current,\n    };\n  }\n\n  render() {\n    const slides = split(this.state.projects, this.state.max_cards);\n    if (this.state.current >= slides.length) {\n      this.setState({ current: slides.length - 1 });\n    }\n    return (\n      <div className=\"s-container\">\n        <a\n          className={\n            \"carousel-control-prev \" +\n            (this.state.current <= 0 ? \"make-hidden\" : \"make-visible\")\n          }\n          role=\"button\"\n          onClick={() => this.changeSlide(-1)}\n          href={void 0}\n        >\n          <span\n            aria-hidden=\"true\"\n            className=\"carousel-control-prev-icon\"\n          ></span>\n          <span className=\"sr-only\">Previous</span>\n        </a>\n\n        <div className=\"s-container\">\n          {slides.map((projects, i) => (\n            <Slide\n              className={\n                \"slide-defaults \" +\n                (i === this.state.current ? \"make-visible \" : \"\") +\n                (i === this.state.current - 1 ? \"prev-slide \" : \"\") +\n                (i === this.state.current + 1 ? \"next-slide \" : \"\")\n              }\n              projects={projects}\n              key={i}\n            />\n          ))}\n        </div>\n        <a\n          className={\n            \"carousel-control-next \" +\n            (this.state.current >= slides.length - 1\n              ? \"make-hidden\"\n              : \"make-visible\")\n          }\n          role=\"button\"\n          onClick={() => this.changeSlide(1)}\n          href={void 0}\n        >\n          <span\n            aria-hidden=\"true\"\n            className=\"carousel-control-next-icon\"\n          ></span>\n          <span className=\"sr-only\">Next</span>\n        </a>\n      </div>\n    );\n  }\n}\n\nfunction Slide(state) {\n  var contents = state.projects.map((project) => (\n    <ProjectCard project={project} key={project.head} />\n  ));\n\n  return (\n    <div className={state.className}>\n      <div className=\"card-deck\">{contents}</div>\n    </div>\n  );\n}\n\nexport default class ProjectSlide extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: props.projects,\n      max_cards: max_cards,\n      count: 0,\n    };\n    tag_colours = props.tags;\n  }\n\n  maxCards() {\n    var dim = Math.round(window.innerHeight / 290) * 2;\n    if (dim < 2) {\n      dim = 2;\n    }\n    if (dim > 10) {\n      dim = 10;\n    }\n    if (window.innerWidth < 1000) {\n      dim = dim / 2;\n    }\n    return dim;\n  }\n  updateDimensions() {\n    const dim = this.maxCards();\n    this.setState({ max_cards: dim });\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  render() {\n    return (\n      <section id=\"projects\" className=\"project slide\">\n        <div className=\"projects-container\">\n          <div className=\"slide-title\">Projects</div>\n          <div\n            className=\"projects-content\"\n            style={{ width: \"100%\", maxWidth: \"1200px\", overflow: \"hidden\" }}\n          >\n            <CustomCarousel\n              className=\"jumbotron vertical-center\"\n              project={this.state.projects}\n              max_cards={this.state.max_cards}\n              current={this.state.current}\n            />\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { makeIcon } from \"./About\";\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\nimport $ from \"jquery\";\nimport Div100vh from \"react-div-100vh\";\n\nexport default class WelcomeSlide extends Component {\n  \n  hideNavIfShown() {\n    if ($(\"#basic-navbar-nav\").hasClass(\"show\")) {\n      this.hideNav();\n      $(\".experience-anchor-button\").removeClass(\"disable-click\");\n    }\n  }\n\n  hideNav() {\n    $(\".navbar-toggler\")[0].click();\n  }\n\n  render() {\n    const github = makeIcon(\n      \"GitHub-Mark-Light-120px-plus.png\",\n      \"GitHub\",\n      \"https://github.com/davidjgolding/\",\n      40,\n      \"contact-logos\"\n    );\n    const linkedin = makeIcon(\n      \"linkedin.svg\",\n      \"LinkedIn\",\n      \"https://www.linkedin.com/in/davidjgolding/\",\n      40,\n      \"contact-logos\"\n    );\n\n    return (\n      <Div100vh id=\"welcome\" className=\"welcome slide\">\n        <div className=\"welcome-container\">\n          <div style={{ textAlign: \"center\" }}>\n            <img className=\"welcome-img\" src=\"dg.png\" alt=\"David Golding\" />\n            <h1>David Golding</h1>\n            <h2>University of Warwick</h2>\n            <div className=\"show-more-container\">\n              <div>\n                <AnchorLink offset=\"50\" href={\"#about\"} className=\"show-more\">\n                  Show More\n                </AnchorLink>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"socials\">\n          {github}\n          {linkedin}\n        </div>\n      </Div100vh>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Tab, Col, ListGroup, Card } from \"react-bootstrap\";\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\n\nclass ExperienceBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entity: this.props.entity,\n      role: this.props.role,\n      location: this.props.location,\n      description: this.props.description,\n      logo: this.props.logo,\n      lastCard: this.props.lastCard,\n      buttonActive: false,\n    };\n    this.expand = this.expand.bind(this);\n  }\n\n  expand() {\n    const active = this.state.buttonActive;\n    this.setState({ buttonActive: !active });\n  }\n\n  render() {\n    const prefix = \"experience-\";\n    const body = (entity) => prefix + entity.replace(/\\s+/g, \"\") + \"-body\";\n    var className = \"text-black experience-card-contents \";\n    if (this.lastCard) {\n      className += \"last-card\";\n    }\n    return (\n      <Tab.Pane className=\"tab-pane\" eventKey={prefix + this.state.entity}>\n        <Card className={className}>\n          <Card.Body className=\"experience-card-body\">\n            <div className={\"experience-anchor-button\"}>\n              <AnchorLink\n                className={\"experience-anchor-button\"}\n                offset=\"167\"\n                href={\"#\" + body(this.state.entity)}\n              >\n                <button\n                  className={\n                    \"btn  experience-show-more experience-anchor-button \"\n                  }\n                  type=\"button\"\n                  data-toggle=\"collapse\"\n                  data-target={\"#\" + body(this.state.entity)}\n                  aria-expanded=\"false\"\n                  aria-controls={\"#\" + body(this.state.entity)}\n                  onClick={this.expand}\n                >\n                  <div className=\"d-flex flex-row experience-card-header\">\n                    <div className=\"company-logo-wrapper\">\n                      <img\n                        className=\"p-2 company-logo\"\n                        src={\"./\" + this.state.logo}\n                        alt={this.state.entity + \" logo\"}\n                      />\n                    </div>\n                    <div className=\"p-2\">\n                      <Card.Title>{this.state.role}</Card.Title>\n                      <Card.Text>{this.state.location}</Card.Text>\n                    </div>\n                    <div className=\"ml-auto experience-show-more-container\">\n                      <svg\n                        width=\"1em\"\n                        height=\"1em\"\n                        viewBox=\"0 0 16 16\"\n                        fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className={\n                          this.state.buttonActive\n                            ? \"experience-show-more-rotate\"\n                            : \"experience-show-more-normal\"\n                        }\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 \n                          10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 \n                          0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\n                        />\n                      </svg>\n                    </div>\n                  </div>\n                </button>\n              </AnchorLink>\n            </div>\n            <div\n              className=\"experience-card-text collapse \"\n              id={body(this.state.entity)}\n            >\n              {this.state.description.map((par, i) => (\n                <p\n                  style={{ textAlign: \"justify\" }}\n                  key={this.state.entity + \"-text-\" + i}\n                >\n                  {par}\n                </p>\n              ))}\n            </div>\n          </Card.Body>\n        </Card>\n      </Tab.Pane>\n    );\n  }\n}\n\nexport default class ExperienceSlide extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      experience: this.props.experience,\n    };\n  }\n\n  render() {\n    const prefix = \"experience-\";\n    const sp = this.state.experience.reduce(\n      (acc, item, i) => {\n        acc[0].push(\n          <ListGroup.Item\n            action\n            key={prefix + item.entity}\n            eventKey={prefix + item.entity}\n            style={{\n              borderBottom:\n                i === this.state.experience.length - 1 ? \"none\" : \"\",\n            }}\n          >\n            <Card\n              id={\"experience-card-\" + i}\n              className=\"text-black experience-card\"\n              style={{ border: \"none\" }}\n            >\n              <Card.Body>\n                <Card.Title>{item.entity}</Card.Title>\n                <Card.Text>{item.duration}</Card.Text>\n              </Card.Body>\n            </Card>\n          </ListGroup.Item>\n        );\n        acc[1].push(\n          <ExperienceBody\n            entity={item.entity}\n            role={item.role}\n            location={item.location}\n            description={item.description}\n            logo={item.logo}\n            key={item.entity}\n            lastCard={i === this.state.experience.length - 1}\n          />\n        );\n        return acc;\n      },\n      [[], []]\n    );\n    return (\n      <section id=\"experience\" className=\"experience slide\">\n        <div className=\"experience-container\">\n          <div className=\"slide-title\">Experience</div>\n          <div>\n            <div className=\"experience-contents\">\n              <div className=\"experience-contents-cards\">\n                <Tab.Container\n                  id=\"list-group-tabs-example\"\n                  defaultActiveKey={prefix + this.state.experience[0].entity}\n                >\n                  <Col sm={4}>\n                    <ListGroup>{sp[0]}</ListGroup>\n                  </Col>\n                  <Col sm={8}>\n                    <Tab.Content>{sp[1]}</Tab.Content>\n                  </Col>\n                </Tab.Container>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport WelcomeSlide from \"./components/Welcome\";\nimport ProjectSlide from \"./components/Projects\";\nimport ExperienceSlide from \"./components/Experience\";\nimport AboutSlide from \"./components/About\";\nimport Helmet from \"react-helmet\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport Projects from \"./data/projects.json\";\nimport Experience from \"./data/experience.json\";\nimport Tags from \"./data/tags.json\";\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\nimport $ from \"jquery\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.hideNav = this.hideNav.bind(this);\n    this.hideNavIfShown = this.hideNavIfShown.bind(this);\n    this.toggleNav = this.toggleNav.bind(this);\n  }\n\n  navItem(id, className, href, item) {\n    return (\n      <AnchorLink\n        id={id}\n        className={className}\n        offset={\"55\"}\n        href={href}\n        onClick={() => this.hideNavIfShown()}\n      >\n        {item}\n      </AnchorLink>\n    );\n  }\n\n  hideNavIfShown() {\n    if ($(\"#basic-navbar-nav\").hasClass(\"show\")) {\n      this.hideNav();\n      $(\".experience-anchor-button\").removeClass(\"disable-click\");\n    }\n  }\n\n  hideNav() {\n    $(\".navbar-toggler\")[0].click();\n  }\n\n  toggleNav() {\n    if ($(\"#basic-navbar-nav\").hasClass(\"show\")) {\n      $(\".experience-anchor-button\").removeClass(\"disable-click\");\n    } else {\n      $(\".experience-anchor-button\").addClass(\"disable-click\");\n    }\n  }\n\n  scroll() {\n    const about = $(window).scrollTop() - $(\"#about\").offset().top;\n    const experience = $(window).scrollTop() - $(\"#experience\").offset().top;\n    const projects = $(window).scrollTop() - $(\"#projects\").offset().top;\n    if (about < -600 || $(window).scrollTop() < 200) {\n      $(\"#nav-about\").blur();\n      $(\"#nav-experience\").blur();\n      $(\"#nav-projects\").blur();\n      $(\"#nav-about\").removeClass(\"nav-active\");\n      $(\"#nav-experience\").removeClass(\"nav-active\");\n      $(\"#nav-projects\").removeClass(\"nav-active\");\n    } else if ($(\"#about\").offset().top - 600 > about && about > projects) {\n      $(\"#nav-experience\").blur();\n      $(\"#nav-projects\").blur();\n      $(\"#nav-about\").addClass(\"nav-active\");\n      $(\"#nav-experience\").removeClass(\"nav-active\");\n      $(\"#nav-projects\").removeClass(\"nav-active\");\n    } else if (experience - 600 < 0) {\n      $(\"#nav-about\").blur();\n      $(\"#nav-projects\").blur();\n      $(\"#nav-about\").removeClass(\"nav-active\");\n      $(\"#nav-experience\").addClass(\"nav-active\");\n      $(\"#nav-projects\").removeClass(\"nav-active\");\n    } else {\n      $(\"#nav-about\").blur();\n      $(\"#nav-experience\").blur();\n      $(\"#nav-about\").removeClass(\"nav-active\");\n      $(\"#nav-experience\").removeClass(\"nav-active\");\n      $(\"#nav-projects\").addClass(\"nav-active\");\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.scroll);\n  }\n\n  render() {\n    return (\n      <div className=\"site-contents area\">\n        <Helmet bodyAttributes={{ style: \"background-color : #111111\" }} />\n        <Navbar\n          className=\"navbar navbar-default \"\n          variant=\"dark\"\n          expand=\"md\"\n          fixed=\"top\"\n          style={{ backgroundColor: \"rgba(17,17,17,0.9)\" }}\n        >\n          <div className=\"mobile-nav d-flex justify-content-between\">\n            {this.navItem(\n              \"nav-home\",\n              \"navbar-brand\",\n              \"#welcome\",\n              <h1 style={{ marginTop: \"auto\" }}>DAVID GOLDING</h1>\n            )}\n            <Navbar.Toggle\n              aria-controls=\"basic-navbar-nav\"\n              onClick={this.toggleNav}\n            />\n          </div>\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <div style={{ marginRight: \"15px\" }}>\n                {this.navItem(\"nav-about\", \"nav-link\", \"#about\", \"About\")}\n              </div>\n              <div style={{ marginRight: \"15px\" }}>\n                {this.navItem(\n                  \"nav-experience\",\n                  \"nav-link\",\n                  \"#experience\",\n                  \"Experience\"\n                )}\n              </div>\n              <div>\n                {this.navItem(\n                  \"nav-projects\",\n                  \"nav-link\",\n                  \"#projects\",\n                  \"Projects\"\n                )}\n              </div>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <div className=\"body-content\" onClick={this.hideNavIfShown}>\n          <div className=\"slide-container\" style={{ opacity: \"1\" }}>\n            <WelcomeSlide />\n            <AboutSlide />\n            <ExperienceSlide experience={Experience} />\n            <ProjectSlide projects={Projects} tags={Tags} />\n            <footer className=\"page-footer font-small\">\n              <div\n                className=\"footer-copyright text-center py-3\"\n                style={{ backgroundColor: \"#EF4E4E\" }}\n              >\n                <p style={{ paddingBottom: 0, marginBottom: 0 }}>\n                  © David Golding {new Date().getFullYear()}\n                </p>\n              </div>\n            </footer>\n          </div>\n        </div>\n        <div\n          style={{ height: \"100vh\", position: \"fixed\", top: 0, width: \"100%\" }}\n        >\n          <div className=\"area\">\n            <ul className=\"circles\">\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Site from \"./Site\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"jquery/dist/jquery.min.js\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"./stylesheet.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Site />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}