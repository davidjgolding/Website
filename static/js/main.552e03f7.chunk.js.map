{"version":3,"sources":["components/Projects.jsx","components/Experience.jsx","components/Welcome.jsx","Site.js","serviceWorker.js","index.js"],"names":["tag_colours","ProjectCard","state","project","Card","className","style","border","Body","Title","head","Text","color","marginLeft","padding","textAlign","whiteSpace","fontStyle","date","parsedDate","Date","toLocaleString","month","getFullYear","parseDate","sub","desc","skills","map","tag","txt","borderColor","key","tags","github","margin","Link","href","width","src","alt","CustomCarousel","props","projects","max_cards","current","changeSlide","bind","i","this","setState","slides","arr","size","res","count","length","push","slice","split","role","onClick","aria-hidden","Slide","nextProps","Component","contents","ProjectSlide","dim","Math","round","window","innerHeight","innerWidth","maxCards","updateDimensions","addEventListener","id","maxWidth","overflow","ExperienceBody","entity","location","description","logo","lastCard","buttonActive","expand","active","body","replace","Tab","Pane","eventKey","offset","type","data-toggle","data-target","aria-expanded","aria-controls","height","viewBox","fill","xmlns","fillRule","d","par","ExperienceSlide","experience","ResizeSensor","$","sp","reduce","acc","item","ListGroup","Item","action","duration","Container","defaultActiveKey","Col","sm","Content","makeIcon","img","url","ContactSlide","warwick","python","kotlin","docker","azure","linkedin","aria-label","App","hideNav","hideNavIfShown","toggleNav","hasClass","removeClass","click","addClass","scrollTop","top","blur","scroll","Helmet","bodyAttributes","Navbar","bg","variant","fixed","sticky","navItem","marginTop","Toggle","Collapse","Nav","opacity","Experience","Projects","Tags","paddingRight","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8vZAGIA,E,gFAsBJ,SAASC,EAAYC,GACnB,IAAMC,EAAUD,EAAMC,QACtB,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAU,0BAA0BC,MAAO,CAAEC,OAAQ,SACzD,kBAACH,EAAA,EAAKI,KAAN,KACE,yBAAKH,UAAU,kCACb,kBAACD,EAAA,EAAKK,MAAN,KAAaN,EAAQO,KAArB,KACA,kBAACN,EAAA,EAAKO,KAAN,CACEL,MAAO,CACLM,MAAO,OACPC,WAAY,EACZC,QAAS,EACTC,UAAW,QACXC,WAAY,SACZC,UAAW,WAjCzB,SAAmBC,GACjB,IAAMC,EAAa,IAAIC,KAAKF,GAG5B,OAFcC,EAAWE,eAAe,UAAW,CAAEC,MAAO,SAE7C,IADFH,EAAWI,cAiCbC,CAAUrB,EAAQe,QAGvB,kBAACd,EAAA,EAAKO,KAAN,CAAWL,MAAO,CAAEM,MAAO,SAAWT,EAAQsB,KAC9C,kBAACrB,EAAA,EAAKO,KAAN,CAAWN,UAAU,gBAAgBF,EAAQuB,MAC7C,yBAAKrB,UAAU,gBAAgBC,MAAO,CAAEQ,QAAS,IAC/C,yBAAKT,UAAU,SAASC,MAAO,CAAEQ,QAAS,YAnCpD,SAAcX,GACZ,OAAOA,EAAQwB,OAAOC,KAAI,SAACC,GACzB,IAAMjB,EAAQZ,EAAY6B,GAAO7B,EAAY6B,GAAO,OAC9CC,EACJ,uBAAGzB,UAAU,MAAMC,MAAO,CAAEM,MAAOA,EAAOmB,YAAanB,IACpDiB,GAGL,OAAO,yBAAKG,IAAK7B,EAAQO,KAAOmB,GAAzB,IAAgCC,EAAhC,QA4BEG,CAAK9B,GACLA,EAAQ+B,OACP,yBAAK7B,UAAU,WAAWC,MAAO,CAAE6B,OAAQ,IACzC,kBAAC/B,EAAA,EAAKgC,KAAN,CAAWC,KAAMlC,EAAQ+B,OAAQ5B,MAAO,CAAEQ,QAAS,YACjD,yBACEwB,MAAM,OACNC,IAAI,uBACJC,IAAI,kBAIR,S,IAkBVC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDxC,MAAQ,CACXyC,SAAUD,EAAMvC,QAChByC,UAAWF,EAAME,UACjBC,QAAS,GAEX,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPF,E,wDAUPC,GACVC,KAAKC,SAAS,CAAEL,QAASI,KAAK/C,MAAM2C,QAAUG,M,+BAWtC,IAAD,OACDG,EAlCV,SAAeC,EAAKC,GAGlB,IAFA,IAAIC,EAAM,GACNC,EAAQ,EACLA,EAAQH,EAAII,QACjBF,EAAIG,KAAKL,EAAIM,MAAMH,EAAOF,EAAOE,IACjCA,GAASF,EAEX,OAAOC,EA2BUK,CAAMV,KAAK/C,MAAMyC,SAAUM,KAAK/C,MAAM0C,WAIrD,OAHIK,KAAK/C,MAAM2C,SAAWM,EAAOK,QAC/BP,KAAKC,SAAS,CAAEL,QAASM,EAAOK,OAAS,IAGzC,yBAAKnD,UAAU,eACb,uBACEA,UACE,0BACC4C,KAAK/C,MAAM2C,SAAW,EAAI,cAAgB,gBAE7Ce,KAAK,SACLC,QAAS,kBAAM,EAAKf,aAAa,IACjCT,UAAM,GAEN,0BACEyB,cAAY,OACZzD,UAAU,+BAEZ,0BAAMA,UAAU,WAAhB,aAGF,yBAAKA,UAAU,eACZ8C,EAAOvB,KAAI,SAACe,EAAUK,GAAX,OACV,kBAACe,EAAD,CACE1D,UACE,mBACC2C,IAAM,EAAK9C,MAAM2C,QAAU,gBAAkB,KAC7CG,IAAM,EAAK9C,MAAM2C,QAAU,EAAI,cAAgB,KAC/CG,IAAM,EAAK9C,MAAM2C,QAAU,EAAI,cAAgB,IAElDF,SAAUA,EACVX,IAAKgB,QAIX,uBACE3C,UACE,0BACC4C,KAAK/C,MAAM2C,SAAWM,EAAOK,OAAS,EACnC,cACA,gBAENI,KAAK,SACLC,QAAS,kBAAM,EAAKf,YAAY,IAChCT,UAAM,GAEN,0BACEyB,cAAY,OACZzD,UAAU,+BAEZ,0BAAMA,UAAU,WAAhB,a,gDA5DwB2D,EAAW9D,GACzC,MAAO,CACLyC,SAAUzC,EAAMyC,SAChBC,UAAWoB,EAAUpB,UACrBC,QAA8B,MAArBmB,EAAUnB,QAAkB3C,EAAM2C,QAAUmB,EAAUnB,a,GAnBxCoB,aAkF7B,SAASF,EAAM7D,GACb,IAAIgE,EAAWhE,EAAMyC,SAASf,KAAI,SAACzB,GAAD,OAChC,kBAACF,EAAD,CAAaE,QAASA,EAAS6B,IAAK7B,EAAQO,UAG9C,OACE,yBAAKL,UAAWH,EAAMG,WACpB,yBAAKA,UAAU,aAAa6D,I,IAKbC,E,kDACnB,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IACDxC,MAAQ,CACXyC,SAAUD,EAAMC,SAChBC,UA7KY,EA8KZW,MAAO,GAETvD,EAAc0C,EAAMT,KAPH,E,uDAWjB,IAAImC,EAA6C,EAAvCC,KAAKC,MAAMC,OAAOC,YAAc,KAU1C,OATIJ,EAAM,IACRA,EAAM,GAEJA,EAAM,KACRA,EAAM,IAEJG,OAAOE,WAAa,MACtBL,GAAY,GAEPA,I,yCAGP,IAAMA,EAAMnB,KAAKyB,WACjBzB,KAAKC,SAAS,CAAEN,UAAWwB,M,0CAI3BnB,KAAK0B,mBACLJ,OAAOK,iBAAiB,SAAU3B,KAAK0B,iBAAiB5B,KAAKE,S,+BAI7D,OACE,6BAAS4B,GAAG,WAAWxE,UAAU,iBAC/B,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,eAAf,aACA,yBACEA,UAAU,mBACVC,MAAO,CAAEgC,MAAO,OAAQwC,SAAU,SAAUC,SAAU,WAEtD,kBAAC,EAAD,CACE1E,UAAU,4BACVF,QAAS8C,KAAK/C,MAAMyC,SACpBC,UAAWK,KAAK/C,MAAM0C,UACtBC,QAASI,KAAK/C,MAAM2C,iB,GA/CQoB,a,0ECvKpCe,E,kDACJ,WAAYtC,GAAQ,IAAD,8BACjB,cAAMA,IACDxC,MAAQ,CACX+E,OAAQ,EAAKvC,MAAMuC,OACnBrB,KAAM,EAAKlB,MAAMkB,KACjBsB,SAAU,EAAKxC,MAAMwC,SACrBC,YAAa,EAAKzC,MAAMyC,YACxBC,KAAM,EAAK1C,MAAM0C,KACjBC,SAAU,EAAK3C,MAAM2C,SACrBC,cAAc,GAEhB,EAAKC,OAAS,EAAKA,OAAOxC,KAAZ,gBAXG,E,qDAejB,IAAMyC,EAASvC,KAAK/C,MAAMoF,aAC1BrC,KAAKC,SAAS,CAAEoC,cAAeE,M,+BAGvB,IAAD,OAEDC,EAAO,SAACR,GAAD,MADE,cACmBA,EAAOS,QAAQ,OAAQ,IAAM,SAC3DrF,EAAY,uCAIhB,OAHI4C,KAAKoC,WACPhF,GAAa,aAGb,kBAACsF,EAAA,EAAIC,KAAL,CAAUvF,UAAU,WAAWwF,SAPlB,cAOqC5C,KAAK/C,MAAM+E,QAC3D,kBAAC7E,EAAA,EAAD,CAAMC,UAAWA,GACf,kBAACD,EAAA,EAAKI,KAAN,CAAWH,UAAU,wBACnB,yBAAKA,UAAW,4BACd,kBAAC,IAAD,CACEA,UAAW,2BACXyF,OAAO,MACPzD,KAAM,IAAMoD,EAAKxC,KAAK/C,MAAM+E,SAE5B,4BACE5E,UACE,sDAEF0F,KAAK,SACLC,cAAY,WACZC,cAAa,IAAMR,EAAKxC,KAAK/C,MAAM+E,QACnCiB,gBAAc,QACdC,gBAAe,IAAMV,EAAKxC,KAAK/C,MAAM+E,QACrCpB,QAASZ,KAAKsC,QAEd,yBAAKlF,UAAU,0CACb,yBAAKA,UAAU,wBACb,yBACEA,UAAU,mBACVkC,IAAK,KAAOU,KAAK/C,MAAMkF,KACvB5C,IAAKS,KAAK/C,MAAM+E,OAAS,WAG7B,yBAAK5E,UAAU,OACb,kBAACD,EAAA,EAAKK,MAAN,KAAawC,KAAK/C,MAAM0D,MACxB,kBAACxD,EAAA,EAAKO,KAAN,KAAYsC,KAAK/C,MAAMgF,WAEzB,yBAAK7E,UAAU,0CACb,yBACEiC,MAAM,MACN8D,OAAO,MACPC,QAAQ,YACRC,KAAK,eACLC,MAAM,6BACNlG,UACE4C,KAAK/C,MAAMoF,aACP,8BACA,+BAGN,0BACEkB,SAAS,UACTC,EAAE,mIAUhB,yBACEpG,UAAU,iCACVwE,GAAIY,EAAKxC,KAAK/C,MAAM+E,SAEnBhC,KAAK/C,MAAMiF,YAAYvD,KAAI,SAAC8E,EAAK1D,GAAN,OAC1B,uBACE1C,MAAO,CAAES,UAAW,WACpBiB,IAAK,EAAK9B,MAAM+E,OAAS,SAAWjC,GAEnC0D,c,GA9FUzC,aAyGR0C,E,kDACnB,WAAYjE,GAAQ,IAAD,8BACjB,cAAMA,IACDxC,MAAQ,CACX0G,WAAY,EAAKlE,MAAMkE,YAHR,E,gEAQjB,IAAIC,IAAaC,IAAE,iBAAiB,WAClCA,IAAE,aAAaV,OAAOU,IAAE,gBAAgBV,e,+BAIlC,IAAD,OAEDW,EAAK9D,KAAK/C,MAAM0G,WAAWI,QAC/B,SAACC,EAAKC,EAAMlE,GA8BV,OA7BAiE,EAAI,GAAGxD,KACL,kBAAC0D,EAAA,EAAUC,KAAX,CACEC,QAAM,EACNrF,IANO,cAMOkF,EAAKjC,OACnBY,SAPO,cAOYqB,EAAKjC,QAExB,kBAAC7E,EAAA,EAAD,CACEyE,GAAI,mBAAqB7B,EACzB3C,UAAU,6BACVC,MAAO,CAAEC,OAAQ,SAEjB,kBAACH,EAAA,EAAKI,KAAN,KACE,kBAACJ,EAAA,EAAKK,MAAN,KAAayG,EAAKjC,QAClB,kBAAC7E,EAAA,EAAKO,KAAN,KAAYuG,EAAKI,cAKzBL,EAAI,GAAGxD,KACL,kBAAC,EAAD,CACEwB,OAAQiC,EAAKjC,OACbrB,KAAMsD,EAAKtD,KACXsB,SAAUgC,EAAKhC,SACfC,YAAa+B,EAAK/B,YAClBC,KAAM8B,EAAK9B,KACXpD,IAAKkF,EAAKjC,OACVI,SAAUrC,IAAM,EAAK9C,MAAM0G,WAAWpD,OAAS,KAG5CyD,IAET,CAAC,GAAI,KAEP,OACE,6BAASpC,GAAG,aAAaxE,UAAU,oBACjC,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,eAAf,eACA,6BACE,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,6BACb,kBAACsF,EAAA,EAAI4B,UAAL,CACE1C,GAAG,0BACH2C,iBA7CC,cA6C0BvE,KAAK/C,MAAM0G,WAAW,GAAG3B,QAEpD,kBAACwC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACP,EAAA,EAAD,KAAYJ,EAAG,KAEjB,kBAACU,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC/B,EAAA,EAAIgC,QAAL,KAAcZ,EAAG,e,GAlEQ9C,aC5G7C,SAAS2D,EAASC,EAAKrF,EAAKsF,GAAmC,IAA9B1B,EAA6B,uDAApB,GAAI/F,EAAgB,uDAAJ,GACxD,OACE,uBAAGA,UAAWA,EAAWgC,KAAMyF,GAC7B,yBAAKvF,IAAKsF,EAAKrF,IAAKA,EAAK4D,OAAQA,EAAS,QAKjC,SAAS2B,EAAarF,GACnC,IAAMsF,EAAUJ,EACd,cACA,wBACA,4BACA,IAEIK,EAASL,EAAS,aAAc,SAAU,0BAC1CM,EAASN,EAAS,aAAc,SAAU,0BAC1CO,EAASP,EAAS,aAAc,SAAU,0BAC1CQ,EAAQR,EACZ,YACA,kBACA,+BAEI1F,EAAS0F,EACb,uBACA,SACA,oCACA,GACA,iBAEIS,EAAWT,EACf,eACA,WACA,6CACA,GACA,iBAGF,OACE,6BAAS/C,GAAG,UAAUxE,UAAU,iBAC9B,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,qBACb,wCACA,0CACA,yCAEF,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,cAAckC,IAAI,SAASC,IAAI,kBAC9C,yBACEnC,UAAU,oBACVkC,IAAI,qBACJC,IAAI,iBAEN,yBAAKnC,UAAU,iCACb,yBAAKA,UAAU,0BACb,oCAIJ,yBAAKA,UAAU,mBACb,gCACK,IACH,0BAAMuD,KAAK,MAAM0E,aAAW,aAA5B,gBAFF,uDAKkDN,EALlD,KAOA,+BACI,IACF,0BAAMpE,KAAK,MAAM0E,aAAW,QAA5B,gBAEQ,IAJV,8DAKyD,IACvD,0BAAM1E,KAAK,MAAM0E,aAAW,UAA5B,gBANF,+CAS0CL,EAT1C,OASsDC,EATtD,gCAU8BC,EAV9B,QAU2CC,EAV3C,KAYA,wCACa,IACX,0BAAMxE,KAAK,MAAM0E,aAAW,aAA5B,sBAFF,iCAKiC,IAC/B,0BAAM1E,KAAK,MAAM0E,aAAW,gBAA5B,gBAEQ,IARV,MASM,IACJ,0BAAM1E,KAAK,MAAM0E,aAAW,aAA5B,gBAEQ,IAZV,oEAcM,IACJ,0BAAM1E,KAAK,MAAM0E,aAAW,SAA5B,gBAfF,KAoBA,2FAC2D,IACzD,0BAAM1E,KAAK,MAAM0E,aAAW,QAA5B,gBAFF,KAOA,yBAAKjI,UAAU,WACZ6B,EACAmG,Q,oDCnGIE,E,kDACnB,WAAY7F,GAAQ,IAAD,8BACjB,cAAMA,IACD8F,QAAU,EAAKA,QAAQzF,KAAb,gBACf,EAAK0F,eAAiB,EAAKA,eAAe1F,KAApB,gBACtB,EAAK2F,UAAY,EAAKA,UAAU3F,KAAf,gBAJA,E,oDAOX8B,EAAIxE,EAAWgC,EAAM6E,GAAO,IAAD,OACjC,OACE,kBAAC,IAAD,CACErC,GAAIA,EACJxE,UAAWA,EACXyF,OAAQ,WACN,OAAIvB,OAAOE,WAAa,IACf,IAEA,IAGXpC,KAAMA,EACNwB,QAAS,kBAAM,EAAK4E,mBAEnBvB,K,uCAMDJ,IAAE,qBAAqB6B,SAAS,UAClC1F,KAAKuF,UACL1B,IAAE,6BAA6B8B,YAAY,oB,gCAK7C9B,IAAE,mBAAmB,GAAG+B,U,kCAIpB/B,IAAE,qBAAqB6B,SAAS,QAClC7B,IAAE,6BAA6B8B,YAAY,iBAE3C9B,IAAE,6BAA6BgC,SAAS,mB,+BAK1C,IAAMlC,EAAaE,IAAEvC,QAAQwE,YAAcjC,IAAE,eAAehB,SAASkD,IACjEpC,GAAc,KAAOE,IAAEvC,QAAQwE,YAAc,KAC/CjC,IAAE,mBAAmBmC,OACrBnC,IAAE,iBAAiBmC,OACnBnC,IAAE,mBAAmB8B,YAAY,cACjC9B,IAAE,iBAAiB8B,YAAY,eACtB9B,IAAE,eAAehB,SAASkD,IAAM,IAAMpC,GAC/CE,IAAE,iBAAiBmC,OACnBnC,IAAE,mBAAmBgC,SAAS,cAC9BhC,IAAE,iBAAiB8B,YAAY,gBAE/B9B,IAAE,mBAAmBmC,OACrBnC,IAAE,mBAAmB8B,YAAY,cACjC9B,IAAE,iBAAiBgC,SAAS,iB,0CAI9BvE,OAAOK,iBAAiB,SAAU3B,KAAKiG,U,+BAIvC,OACE,yBAAK7I,UAAU,iBACb,kBAAC8I,EAAA,EAAD,CAAQC,eAAgB,CAAE9I,MAAO,gCACjC,kBAAC+I,EAAA,EAAD,CACEhJ,UAAU,yBACViJ,GAAG,OACHC,QAAQ,OACRhE,OAAO,KACPiE,MAAM,MACNC,OAAO,OAEP,yBAAKpJ,UAAU,6CACZ4C,KAAKyG,QACJ,WACA,eACA,WACA,wBAAIpJ,MAAO,CAAEqJ,UAAW,SAAxB,kBAEF,kBAACN,EAAA,EAAOO,OAAR,CACEzD,gBAAc,mBACdtC,QAASZ,KAAKyF,aAGlB,kBAACW,EAAA,EAAOQ,SAAR,CAAiBhF,GAAG,oBAClB,kBAACiF,EAAA,EAAD,CAAKzJ,UAAU,WACb,yBAAKC,MAAO,CAAEgC,MAAO,QAASvB,UAAW,WACtCkC,KAAKyG,QACJ,iBACA,WACA,cACA,eAGJ,yBAAKpJ,MAAO,CAAEgC,MAAO,OAAQvB,UAAW,WACrCkC,KAAKyG,QACJ,eACA,WACA,YACA,gBAMV,yBAAKrJ,UAAU,eAAewD,QAASZ,KAAKwF,gBAC1C,yBAAKpI,UAAU,kBAAkBC,MAAO,CAAEyJ,QAAS,MACjD,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAiBnD,WAAYoD,IAC7B,kBAAC,EAAD,CAAcrH,SAAUsH,EAAUhI,KAAMiI,IACxC,4BAAQ7J,UAAU,0BAChB,yBACEA,UAAU,mCACVC,MAAO,CAAE6J,aAAc,SAFzB,uBAImB,IAAI/I,MAAOG,uB,GA3HX0C,aCAbmG,QACW,cAA7B7F,OAAOW,SAASmF,UAEe,UAA7B9F,OAAOW,SAASmF,UAEhB9F,OAAOW,SAASmF,SAASC,MACvB,2D,wBCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.552e03f7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"react-bootstrap/Card\";\n\nvar tag_colours;\nconst max_cards = 8;\n\nfunction parseDate(date) {\n  const parsedDate = new Date(date);\n  const month = parsedDate.toLocaleString(\"default\", { month: \"long\" });\n  const year = parsedDate.getFullYear();\n  return month + \" \" + year;\n}\n\nfunction tags(project) {\n  return project.skills.map((tag) => {\n    const color = tag_colours[tag] ? tag_colours[tag] : \"grey\";\n    const txt = (\n      <p className=\"tag\" style={{ color: color, borderColor: color }}>\n        {tag}\n      </p>\n    );\n    return <div key={project.head + tag}> {txt} </div>;\n  });\n}\n\nfunction ProjectCard(state) {\n  const project = state.project;\n  return (\n    <Card className=\"text-black project-card\" style={{ border: \"none\" }}>\n      <Card.Body>\n        <div className=\"d-flex justify-content-between\">\n          <Card.Title>{project.head} </Card.Title>\n          <Card.Text\n            style={{\n              color: \"grey\",\n              marginLeft: 5,\n              padding: 0,\n              textAlign: \"right\",\n              whiteSpace: \"nowrap\",\n              fontStyle: \"italic\",\n            }}\n          >\n            {parseDate(project.date)}\n          </Card.Text>\n        </div>\n        <Card.Text style={{ color: \"grey\" }}>{project.sub}</Card.Text>\n        <Card.Text className=\"card-content\">{project.desc}</Card.Text>\n        <div className=\"tag-container\" style={{ padding: 0 }}>\n          <div className=\"d-flex\" style={{ padding: \"1.25rem\" }}>\n            {tags(project)}\n            {project.github ? (\n              <div className=\"ml-auto \" style={{ margin: 0 }}>\n                <Card.Link href={project.github} style={{ padding: \"1px 0px\" }}>\n                  <img\n                    width=\"30px\"\n                    src=\"GitHub-Mark-64px.png\"\n                    alt=\"GitHub Logo\"\n                  />\n                </Card.Link>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n\nfunction split(arr, size) {\n  var res = [];\n  var count = 0;\n  while (count < arr.length) {\n    res.push(arr.slice(count, size + count));\n    count += size;\n  }\n  return res;\n}\n\nclass CustomCarousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: props.project,\n      max_cards: props.max_cards,\n      current: 0,\n    };\n    this.changeSlide = this.changeSlide.bind(this);\n  }\n\n  changeSlide(i) {\n    this.setState({ current: this.state.current + i });\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    return {\n      projects: state.projects,\n      max_cards: nextProps.max_cards,\n      current: nextProps.current == null ? state.current : nextProps.current,\n    };\n  }\n\n  render() {\n    const slides = split(this.state.projects, this.state.max_cards);\n    if (this.state.current >= slides.length) {\n      this.setState({ current: slides.length - 1 });\n    }\n    return (\n      <div className=\"s-container\">\n        <a\n          className={\n            \"carousel-control-prev \" +\n            (this.state.current <= 0 ? \"make-hidden\" : \"make-visible\")\n          }\n          role=\"button\"\n          onClick={() => this.changeSlide(-1)}\n          href={void 0}\n        >\n          <span\n            aria-hidden=\"true\"\n            className=\"carousel-control-prev-icon\"\n          ></span>\n          <span className=\"sr-only\">Previous</span>\n        </a>\n\n        <div className=\"s-container\">\n          {slides.map((projects, i) => (\n            <Slide\n              className={\n                \"slide-defaults \" +\n                (i === this.state.current ? \"make-visible \" : \"\") +\n                (i === this.state.current - 1 ? \"prev-slide \" : \"\") +\n                (i === this.state.current + 1 ? \"next-slide \" : \"\")\n              }\n              projects={projects}\n              key={i}\n            />\n          ))}\n        </div>\n        <a\n          className={\n            \"carousel-control-next \" +\n            (this.state.current >= slides.length - 1\n              ? \"make-hidden\"\n              : \"make-visible\")\n          }\n          role=\"button\"\n          onClick={() => this.changeSlide(1)}\n          href={void 0}\n        >\n          <span\n            aria-hidden=\"true\"\n            className=\"carousel-control-next-icon\"\n          ></span>\n          <span className=\"sr-only\">Next</span>\n        </a>\n      </div>\n    );\n  }\n}\n\nfunction Slide(state) {\n  var contents = state.projects.map((project) => (\n    <ProjectCard project={project} key={project.head} />\n  ));\n\n  return (\n    <div className={state.className}>\n      <div className=\"card-deck\">{contents}</div>\n    </div>\n  );\n}\n\nexport default class ProjectSlide extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projects: props.projects,\n      max_cards: max_cards,\n      count: 0,\n    };\n    tag_colours = props.tags;\n  }\n\n  maxCards() {\n    var dim = Math.round(window.innerHeight / 290) * 2;\n    if (dim < 2) {\n      dim = 2;\n    }\n    if (dim > 10) {\n      dim = 10;\n    }\n    if (window.innerWidth < 1000) {\n      dim = dim / 2;\n    }\n    return dim;\n  }\n  updateDimensions() {\n    const dim = this.maxCards();\n    this.setState({ max_cards: dim });\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n  }\n\n  render() {\n    return (\n      <section id=\"projects\" className=\"project slide\">\n        <div className=\"projects-container\">\n          <div className=\"slide-title\">PROJECTS.</div>\n          <div\n            className=\"projects-content\"\n            style={{ width: \"100%\", maxWidth: \"1200px\", overflow: \"hidden\" }}\n          >\n            <CustomCarousel\n              className=\"jumbotron vertical-center\"\n              project={this.state.projects}\n              max_cards={this.state.max_cards}\n              current={this.state.current}\n            />\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Tab, Col, ListGroup, Card } from \"react-bootstrap\";\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\nimport $ from \"jquery\";\nimport ResizeSensor from \"css-element-queries/src/ResizeSensor\";\nclass ExperienceBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entity: this.props.entity,\n      role: this.props.role,\n      location: this.props.location,\n      description: this.props.description,\n      logo: this.props.logo,\n      lastCard: this.props.lastCard,\n      buttonActive: false,\n    };\n    this.expand = this.expand.bind(this);\n  }\n\n  expand() {\n    const active = this.state.buttonActive;\n    this.setState({ buttonActive: !active });\n  }\n\n  render() {\n    const prefix = \"experience-\";\n    const body = (entity) => prefix + entity.replace(/\\s+/g, \"\") + \"-body\";\n    var className = \"text-black experience-card-contents \";\n    if (this.lastCard) {\n      className += \"last-card\";\n    }\n    return (\n      <Tab.Pane className=\"tab-pane\" eventKey={prefix + this.state.entity}>\n        <Card className={className}>\n          <Card.Body className=\"experience-card-body\">\n            <div className={\"experience-anchor-button\"}>\n              <AnchorLink\n                className={\"experience-anchor-button\"}\n                offset=\"165\"\n                href={\"#\" + body(this.state.entity)}\n              >\n                <button\n                  className={\n                    \"btn  experience-show-more experience-anchor-button \"\n                  }\n                  type=\"button\"\n                  data-toggle=\"collapse\"\n                  data-target={\"#\" + body(this.state.entity)}\n                  aria-expanded=\"false\"\n                  aria-controls={\"#\" + body(this.state.entity)}\n                  onClick={this.expand}\n                >\n                  <div className=\"d-flex flex-row experience-card-header\">\n                    <div className=\"company-logo-wrapper\">\n                      <img\n                        className=\"p-2 company-logo\"\n                        src={\"./\" + this.state.logo}\n                        alt={this.state.entity + \" logo\"}\n                      />\n                    </div>\n                    <div className=\"p-2\">\n                      <Card.Title>{this.state.role}</Card.Title>\n                      <Card.Text>{this.state.location}</Card.Text>\n                    </div>\n                    <div className=\"ml-auto experience-show-more-container\">\n                      <svg\n                        width=\"1em\"\n                        height=\"1em\"\n                        viewBox=\"0 0 16 16\"\n                        fill=\"currentColor\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className={\n                          this.state.buttonActive\n                            ? \"experience-show-more-rotate\"\n                            : \"experience-show-more-normal\"\n                        }\n                      >\n                        <path\n                          fillRule=\"evenodd\"\n                          d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 \n                          10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 \n                          0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\n                        />\n                      </svg>\n                    </div>\n                  </div>\n                </button>\n              </AnchorLink>\n            </div>\n            <div\n              className=\"experience-card-text collapse \"\n              id={body(this.state.entity)}\n            >\n              {this.state.description.map((par, i) => (\n                <p\n                  style={{ textAlign: \"justify\" }}\n                  key={this.state.entity + \"-text-\" + i}\n                >\n                  {par}\n                </p>\n              ))}\n            </div>\n          </Card.Body>\n        </Card>\n      </Tab.Pane>\n    );\n  }\n}\n\nexport default class ExperienceSlide extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      experience: this.props.experience,\n    };\n  }\n\n  componentDidMount() {\n    new ResizeSensor($(\".tab-content\"), function () {\n      $(\".col-sm-4\").height($(\".tab-content\").height());\n    });\n  }\n\n  render() {\n    const prefix = \"experience-\";\n    const sp = this.state.experience.reduce(\n      (acc, item, i) => {\n        acc[0].push(\n          <ListGroup.Item\n            action\n            key={prefix + item.entity}\n            eventKey={prefix + item.entity}\n          >\n            <Card\n              id={\"experience-card-\" + i}\n              className=\"text-black experience-card\"\n              style={{ border: \"none\" }}\n            >\n              <Card.Body>\n                <Card.Title>{item.entity}</Card.Title>\n                <Card.Text>{item.duration}</Card.Text>\n              </Card.Body>\n            </Card>\n          </ListGroup.Item>\n        );\n        acc[1].push(\n          <ExperienceBody\n            entity={item.entity}\n            role={item.role}\n            location={item.location}\n            description={item.description}\n            logo={item.logo}\n            key={item.entity}\n            lastCard={i === this.state.experience.length - 1}\n          />\n        );\n        return acc;\n      },\n      [[], []]\n    );\n    return (\n      <section id=\"experience\" className=\"experience slide\">\n        <div className=\"experience-container\">\n          <div className=\"slide-title\">EXPERIENCE.</div>\n          <div>\n            <div className=\"experience-contents\">\n              <div className=\"experience-contents-cards\">\n                <Tab.Container\n                  id=\"list-group-tabs-example\"\n                  defaultActiveKey={prefix + this.state.experience[0].entity}\n                >\n                  <Col sm={4}>\n                    <ListGroup>{sp[0]}</ListGroup>\n                  </Col>\n                  <Col sm={8}>\n                    <Tab.Content>{sp[1]}</Tab.Content>\n                  </Col>\n                </Tab.Container>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React from \"react\";\n\nfunction makeIcon(img, alt, url, height = 25, className = \"\") {\n  return (\n    <a className={className} href={url}>\n      <img src={img} alt={alt} height={height + \"px\"} />\n    </a>\n  );\n}\n\nexport default function ContactSlide(props) {\n  const warwick = makeIcon(\n    \"warwick.png\",\n    \"University of Warwick\",\n    \"https://www.warwick.ac.uk\",\n    30\n  );\n  const python = makeIcon(\"python.png\", \"Python\", \"https://www.python.org\");\n  const kotlin = makeIcon(\"kotlin.png\", \"Kotlin\", \"https://kotlinlang.org\");\n  const docker = makeIcon(\"docker.png\", \"Docker\", \"https://www.docker.com\");\n  const azure = makeIcon(\n    \"azure.svg\",\n    \"Microsoft Azure\",\n    \"https://azure.microsoft.com\"\n  );\n  const github = makeIcon(\n    \"GitHub-Mark-64px.png\",\n    \"GitHub\",\n    \"https://github.com/davidjgolding/\",\n    40,\n    \"contact-logos\"\n  );\n  const linkedin = makeIcon(\n    \"linkedin.svg\",\n    \"LinkedIn\",\n    \"https://www.linkedin.com/in/davidjgolding/\",\n    40,\n    \"contact-logos\"\n  );\n\n  return (\n    <section id=\"welcome\" className=\"welcome slide\">\n      <div className=\"welcome-inner\">\n        <div className=\"welcome-statement\">\n          <h2>STUDENT.</h2>\n          <h2>DEVELOPER.</h2>\n          <h2>CREATOR.</h2>\n        </div>\n        <div className=\"welcome-container\">\n          <div className=\"welcome-card\">\n            <img className=\"welcome-img\" src=\"dg.png\" alt=\"David Golding\" />\n            <img\n              className=\"welcome-img-arrow\"\n              src=\"curved-arrow-2.svg\"\n              alt=\"Curved Arrow\"\n            />\n            <div className=\"d-flex flex-row welcome-title\">\n              <div className=\"p-2 welcome-title-item\">\n                <h3>ME</h3>\n              </div>\n            </div>\n\n            <div className=\"welcome-content\">\n              <p>\n                Hi{\" \"}\n                <span role=\"img\" aria-label=\"hand wave\">\n                  👋\n                </span>\n                , I’m a final year Computer Science student at {warwick}.\n              </p>\n              <p>\n                I{\" \"}\n                <span role=\"img\" aria-label=\"love\">\n                  ❤️\n                </span>{\" \"}\n                building things which help people and ensuring they’re{\" \"}\n                <span role=\"img\" aria-label=\"secure\">\n                  🔒\n                </span>\n                . You’ll normally find me playing with {python} or {kotlin},\n                sometimes with the help of {docker} and {azure}.\n              </p>\n              <p>\n                Aside from{\" \"}\n                <span role=\"img\" aria-label=\"computers\">\n                  🖥️\n                </span>\n                , I'm an extremely competitive{\" \"}\n                <span role=\"img\" aria-label=\"table tennis\">\n                  🏓\n                </span>{\" \"}\n                and{\" \"}\n                <span role=\"img\" aria-label=\"badminton\">\n                  🏸\n                </span>{\" \"}\n                player, however, for more relaxing entertainment I often play\n                the{\" \"}\n                <span role=\"img\" aria-label=\"piano\">\n                  🎹\n                </span>\n                .\n              </p>\n              <p>\n                I’m always open to new opportunities so please reach out{\" \"}\n                <span role=\"img\" aria-label=\"grin\">\n                  😁\n                </span>\n                .\n              </p>\n              <div className=\"contact\">\n                {github}\n                {linkedin}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","import React, { Component } from \"react\";\nimport ProjectSlide from \"./components/Projects\";\nimport ExperienceSlide from \"./components/Experience\";\nimport WelcomeSlide from \"./components/Welcome\";\nimport Helmet from \"react-helmet\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport Projects from \"./data/projects.json\";\nimport Experience from \"./data/experience.json\";\nimport Tags from \"./data/tags.json\";\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\nimport $ from \"jquery\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.hideNav = this.hideNav.bind(this);\n    this.hideNavIfShown = this.hideNavIfShown.bind(this);\n    this.toggleNav = this.toggleNav.bind(this);\n  }\n\n  navItem(id, className, href, item) {\n    return (\n      <AnchorLink\n        id={id}\n        className={className}\n        offset={() => {\n          if (window.innerWidth < 768) {\n            return 165;\n          } else {\n            return 50;\n          }\n        }}\n        href={href}\n        onClick={() => this.hideNavIfShown()}\n      >\n        {item}\n      </AnchorLink>\n    );\n  }\n\n  hideNavIfShown() {\n    if ($(\"#basic-navbar-nav\").hasClass(\"show\")) {\n      this.hideNav();\n      $(\".experience-anchor-button\").removeClass(\"disable-click\");\n    }\n  }\n\n  hideNav() {\n    $(\".navbar-toggler\")[0].click();\n  }\n\n  toggleNav() {\n    if ($(\"#basic-navbar-nav\").hasClass(\"show\")) {\n      $(\".experience-anchor-button\").removeClass(\"disable-click\");\n    } else {\n      $(\".experience-anchor-button\").addClass(\"disable-click\");\n    }\n  }\n\n  scroll() {\n    const experience = $(window).scrollTop() - $(\"#experience\").offset().top;\n    if (experience < -600 || $(window).scrollTop() < 200) {\n      $(\"#nav-experience\").blur();\n      $(\"#nav-projects\").blur();\n      $(\"#nav-experience\").removeClass(\"nav-active\");\n      $(\"#nav-projects\").removeClass(\"nav-active\");\n    } else if ($(\"#experience\").offset().top - 600 > experience) {\n      $(\"#nav-projects\").blur();\n      $(\"#nav-experience\").addClass(\"nav-active\");\n      $(\"#nav-projects\").removeClass(\"nav-active\");\n    } else {\n      $(\"#nav-experience\").blur();\n      $(\"#nav-experience\").removeClass(\"nav-active\");\n      $(\"#nav-projects\").addClass(\"nav-active\");\n    }\n  }\n  componentDidMount() {\n    window.addEventListener(\"scroll\", this.scroll);\n  }\n\n  render() {\n    return (\n      <div className=\"site-contents\">\n        <Helmet bodyAttributes={{ style: \"background-color : #EAECEF\" }} />\n        <Navbar\n          className=\"navbar navbar-default \"\n          bg=\"dark\"\n          variant=\"dark\"\n          expand=\"md\"\n          fixed=\"top\"\n          sticky=\"top\"\n        >\n          <div className=\"mobile-nav d-flex justify-content-between\">\n            {this.navItem(\n              \"nav-home\",\n              \"navbar-brand\",\n              \"#welcome\",\n              <h1 style={{ marginTop: \"auto\" }}>DAVID GOLDING</h1>\n            )}\n            <Navbar.Toggle\n              aria-controls=\"basic-navbar-nav\"\n              onClick={this.toggleNav}\n            />\n          </div>\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <div style={{ width: \"100px\", textAlign: \"center\" }}>\n                {this.navItem(\n                  \"nav-experience\",\n                  \"nav-link\",\n                  \"#experience\",\n                  \"Experience\"\n                )}\n              </div>\n              <div style={{ width: \"80px\", textAlign: \"center\" }}>\n                {this.navItem(\n                  \"nav-projects\",\n                  \"nav-link\",\n                  \"#projects\",\n                  \"Projects\"\n                )}\n              </div>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <div className=\"body-content\" onClick={this.hideNavIfShown}>\n          <div className=\"slide-container\" style={{ opacity: \"1\" }}>\n            <WelcomeSlide />\n            <ExperienceSlide experience={Experience} />\n            <ProjectSlide projects={Projects} tags={Tags} />\n            <footer className=\"page-footer font-small\">\n              <div\n                className=\"footer-copyright text-right py-3\"\n                style={{ paddingRight: \"15px\" }}\n              >\n                © David Golding {new Date().getFullYear()}\n              </div>\n            </footer>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Site from \"./Site\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"jquery/dist/jquery.min.js\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"./stylesheet.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Site />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}